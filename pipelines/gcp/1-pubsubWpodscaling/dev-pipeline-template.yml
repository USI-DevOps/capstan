---
schema: "1"
id: helloagain-dev
metadata: 
  description: "This template does not have a description"
  name: dev
  owner: anonymous
  scopes: 
    - helloagain
protect: false
variables:
- name: GCPProjectName
  description: Google Project Name
  defaultValue: myproject 
configuration: 
  concurrentExecutions: 
    limitConcurrent: true
    parallel: false
  triggers: 
    - 
      attributeConstraints: {}
      enabled: true
      name: unnamed0
      payloadConstraints: 
        action: INSERT
        tag: "gcr.io/{{ GCPProjectName }}/hello-karyon-rxnetty:latest"
      pubsubSystem: google
      subscriptionName: gcr
      type: pubsub

stages: 
  - 
    config: 
      clusters: 
        - 
          account: cdci-runtime-gkegcr
          application: helloagain
          capacity: 
            desired: 1
            max: 4
            min: 1
          cloudProvider: kubernetes
          containers: 
            - 
              args: []
              command: []
              envFrom: []
              envVars: []
              imageDescription: 
                account: gcpimagerepository
                imageId: "gcr.io/{{ GCPProjectName }}/hello-karyon-rxnetty:latest"
                registry: gcr.io
                repository: {{ GCPProjectName }}/hello-karyon-rxnetty
                tag: latest
              imagePullPolicy: IFNOTPRESENT
              limits: {}
              name: {{ GCPProjectName }}-hello-karyon-rxnetty
              ports: 
                - 
                  containerPort: 80
                  name: http
                  protocol: TCP
              requests: {}
              volumeMounts: []
          deployment: 
            deploymentStrategy: 
              rollingUpdate: 
                maxSurge: "4"
                maxUnavailable: ""
              type: RollingUpdate
            enabled: true
            minReadySeconds: 0
            revisionHistoryLimit: 2
          dnsPolicy: ClusterFirst
          initContainers: []
          interestingHealthProviderNames: 
            - KubernetesContainer
            - KubernetesPod
          loadBalancers: 
            - helloagain-dev
          namespace: apps
          nodeSelector: {}
          podAnnotations: {}
          provider: kubernetes
          region: apps
          replicaSetAnnotations: {}
          scalingPolicy: 
            cpuUtilization: 
              target: 40
          stack: dev
          strategy: ""
          targetSize: 2
          terminationGracePeriodSeconds: 30
          useSourceCapacity: false
          volumeSources: []
    id: deploy1
    inheritanceControl: {}
    inject: {}
    name: Deploy
    type: deploy
